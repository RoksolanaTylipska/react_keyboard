{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","message","pressKeyboard","event","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"wOAOaA,EAAb,4MACEC,MAAQ,CACNC,QAAS,4BAFb,EAaEC,cAAgB,SAACC,GACf,EAAKC,SACH,CAAEH,QAAQ,4BAAD,OAA8BE,EAAME,IAApC,SAff,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,iBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,iBAV/C,oBAmBE,WACE,IAAQD,EAAYO,KAAKR,MAAjBC,QAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGT,UAzBX,GAAyBU,a,MCFzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.591c2487.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './App.scss';\n\ninterface State {\n  message: string\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    message: 'Nothing was pressed yet!',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.pressKeyboard);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.pressKeyboard);\n  }\n\n  pressKeyboard = (event: KeyboardEvent) => {\n    this.setState(\n      { message: `The last pressed key is [${event.key}] ` },\n    );\n  };\n\n  render() {\n    const { message } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {message}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}